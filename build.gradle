plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
	id 'application'
	id 'groovy'
}

group = 'com.ejercicio-bci'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

jacoco {
	toolVersion= "0.8.12"
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//SPRING
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'


	//JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

	//LOMBOK
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//H2
	runtimeOnly 'com.h2database:h2'

	//UNIT TEST
	testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.9.0'
	//testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0' // Para JUnit 5

	//COVERAGE
	testImplementation group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.12'

	//GROOVY
	implementation group: 'org.apache.groovy', name: 'groovy', version: '4.0.23'

	//SPOCK
	testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.3-groovy-4.0'
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.3-groovy-4.0'
}

jacocoTestReport {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'com/ejercicio_bci/login/config/**',
					'com/ejercicio_bci/login/dto/**',
					'com/ejercicio_bci/login/entity/**',
					'com/ejercicio_bci/login/filter/**',
					'com/ejercicio_bci/login/LoginApplication.class'
			] )
		}))
	}
}

application {
	mainClassName = 'com.ejercicio_bci.login.LoginApplication'
}

tasks.register('compileTests', JavaCompile) {
	description = 'Compila los tests de Groovy'
	source = sourceSets.test.allSource
	classpath = sourceSets.test.compileClasspath
	destinationDir = file("$buildDir/classes/test")
	options.encoding = 'UTF-8' // Opcional, establece la codificación
}

tasks.named('test') {
	dependsOn compileTests
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}


tasks.withType(GroovyCompile) {
	groovyOptions.fork = true // Permitir compilación en un proceso separado
}



